#pragma once

_WNAME_BEGIN
namespace crypto
{
	class CCrc32 final
	{
	#pragma region Public_Method
	public:
	//==========================================================================
		/**
		* конструктор по-умолчанию.
		*/
		WNAME CCrc32() noexcept;
	//==========================================================================
		/**
		* конструктор из свертки.
		* @param hash - копируемый объект.
		*/
		WNAME CCrc32(
			const DWORD hash) noexcept;
	//==========================================================================
		/**
		* конструктор копирования.
		* @param crc32 - копируемый объект.
		*/
		WNAME CCrc32(
			const CCrc32& crc32) noexcept;
	//==========================================================================
		/**
		* оператор перемещения.
		* @param crc32 - перемещаемый объект.
		* @return - текущий объект.
		*/
		WNAME CCrc32(
			CCrc32&& crc32) noexcept;
	//==========================================================================
		/**
		* добавить буфер.
		* @param input - входной буфер.
		* @param inputLen - размер буфера.
		*/
		WNAME void update(
			const BYTE* input,
			size_t inputLen) noexcept;
	//==========================================================================
		/**
		* очистка.
		*/
		WNAME void clear() noexcept;
	//==========================================================================
		/**
		* получить свертку.
		* @return - указатель на свертку.
		*/
		WNAME DWORD getHash() const noexcept;
	//==========================================================================
		/**
		* оператор копирования.
		* @param crc32 - копируемый объект.
		* @return - текущий объект.
		*/
		WNAME CCrc32& operator=(
			const CCrc32& crc32) noexcept;
	//==========================================================================
		/**
		* оператор перемещения.
		* @param crc32 - перемещаемый объект.
		* @return - текущий объект.
		*/
		WNAME CCrc32& operator=(
			CCrc32&& crc32) noexcept;
	//==========================================================================
		/**
		* оператор сравнения.
		* @param crc32 - объект.
		* @return - результат сравнения.
		*/
		WNAME bool operator==(
			const CCrc32& crc32) noexcept;
	//==========================================================================
		/**
		* оператор сравнение НЕ.
		* @param crc32 - объект.
		* @return - результат сравнения.
		*/
		WNAME bool operator!=(
			const CCrc32& crc32) noexcept;
	//==========================================================================
		/**
		* деструктор.
		*/
		WNAME ~CCrc32() = default;
	//==========================================================================
	#pragma endregion

	#pragma region Private_Data
	private:
	//==========================================================================
		/** свертка */
		DWORD _hash = 0;
	//==========================================================================
	#pragma endregion
	};
}
_WNAME_END